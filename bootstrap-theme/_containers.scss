// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

@if $enable-grid-classes {
  // Single container class with breakpoint max-widths
  .container {
    @include make-container();
    @include make-container-max-widths();
  }

  // 100% wide container at all breakpoints
  .container-fluid {
    @include make-container();
  }

  // Responsive containers that are 100% wide until a breakpoint
  @each $breakpoint, $container-max-width in $container-max-widths {
    .container-#{$breakpoint} {
      @extend .container-fluid;
    }

    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      %responsive-container-#{$breakpoint} {
        max-width: $container-max-width;
      }

      // Extend each breakpoint which is smaller or equal to the current breakpoint
      $extend-breakpoint: true;

      @each $name, $width in $grid-breakpoints {
        @if ($extend-breakpoint) {
          .container#{breakpoint-infix($name, $grid-breakpoints)} {
            @extend %responsive-container-#{$breakpoint};
          }

          // Once the current breakpoint is reached, stop extending
          @if ($breakpoint == $name) {
            $extend-breakpoint: false;
          }
        }
      }
    }
  }

  // Containers within Containers - remove padding start and end
  //
  // Attribute Selector used so avoid long selector rules for every container breakpoint
  // e.g 
  //    .container {
  //      .container, .container-sm, .container-md, .container-lg, .container-xl, .container-xxl {...}
  //    }
  //    .container-sm {
  //      .container, .container-sm, .container-md, .container-lg, .container-xl, .container-xxl {...}
  //    }
  //    ....
  //
  // To overcome the situation where you want to maintain the padding start 
  // and end on a container within a container 
  // OR if an element contains the word 'container' in its class name but 
  // isn't a container
  // mark the element with '.maintain-px' class
  *[class*='container'] *[class*='container']:not(.maintain-px) {
    padding-left: 0;
    padding-right: 0;
  }
}
